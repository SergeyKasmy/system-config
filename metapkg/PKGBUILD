pkgbase=ciren-meta-packages
pkgname=(
	'ciren-meta-base'
	'ciren-meta-desktop'
	'ciren-meta-dev'
	'ciren-meta-vm'
	# 'ciren-meta-gaming'
	# 'ciren-meta-media-edit'
	# 'ciren-meta-wine'
	)
pkgver=0.8
pkgrel=1
arch=('any')
license=('MIT')

package_ciren-meta-base() {
	depends=(
		'base'
		'bash'
		'dash'
		'dashbinsh'
		'fish'
		'mkmm'
		'python'

		'absolutely-proprietary'
		'advcp'
		'aria2'
		'avahi'
		'bat'
		'bind'	# dns stuff
		'curl'
		'dhcpcd'
		'diskus'
		'dua-cli'	# ncdu alternative
		'duf'	# better df
		'expect'	# for unbuffer
		'fd'
		'firejail'
		'flatpak'
		'fwupd'
		'gist'	# github gists
		'glances'	# htop alternative
		'glow'		# markdown viewer
		'gocryptfs'
		'gotop'	# htop alternative #2
		'htop'
		'hyperfine'	# benchmarking
		'inxi'
		'iotop'
		'iperf'
		'jless'	# JSON viewer
		'jump'
		'just'
		'lsd'
		'man-db'
		'man-pages'
		'megatools'
		'miniserve'	# serve files via HTTP
		'mosh'	# mobile ssh
		'nano'
		'needrestart'	# used by topgrade for restart detection
		'neovim'
		'nss-mdns'
		'nvme-cli'
		'openssh'
		'openvpn'
		'pacman-contrib'
		'parallel'
		'paru'
		'pdftk'	# PDF stuff
		'pkgstats'
		'pv'	# progress bar
		'ranger'
		'rclone'	# sync with cloud storage
		'rmlint'
		'rsync'
		'sd'	# better sed
		'shellcheck'
		'smartmontools'
		'speedtest-cli'
		'sshfs'
		'stow'
		'stress'
		'sudo'
		'syncthing'
		'systemd-swap'
		'tmux'
		'topgrade'	# check all pkg mngrs for updates
		'translate-shell'
		'udisks2'
		'unzip'
		'zerotier-one'
		'zip'
		'zstd'

		## media and codecs
		'ffmpeg'
		'ffpb'	# ffmpeg progress bar
		'faad2'		# AAC
		'flac'
		'libmad' 	# MPEG
		'libmatroska'
		'libmp4v2'	# MPEG-4
		'libmpeg2' 	# MPEG-12
		'libogg'
		'libvorbis'
		'libvpx'
		'mpg123' 	# MPEG-123
		'opusfile'
		'wavpack'
		'x264'
		'x265'
		)
	
	optdepends=(
		'aurutils'
		'compsize: btrfs compressed file size'
		'efibootmgr'
		'liquidctl'
		'nbd'
		'nbdkit'
		'onefetch: project summary'
		'plex-media-server'
		'snap-pac: btrfs snapshots'
		'steamcmd'
		'terminus-font: for hiDPI displays'
		'testdisk: photorec for file recovery'
		'tokei: code line calculator'
		'uwuify'
		'ventoy: multiboot USB'
		'zfs-dkms'
		)
}

package_ciren-meta-desktop() {
	depends=(
		## graphics
		'opengl-driver'
		'vulkan-driver'
		'vulkan-icd-loader'
		'vulkan-tools'
		'libva'
		'libva-utils'

		## wayland
		'sway'
		'gammastep'
		'grim'
		'waypipe'

		## xorg
		'openbox'
		'xorg-server'
		'xorg-xhost'
		'xorg-xinit'
		'xorg-xinput'
		'xorg-xkill'
		'xorg-xprop'
		'xorg-xrandr'

		## desktop functionality
		'alsa-utils'
		'bluez'		# bluetooth
		'bluez-utils'
		'cups'	# printers
		'pipewire'
		'pipewire-alsa'
		'pipewire-jack'
		'pipewire-pulse'
		'tigervnc'
		'xdg-desktop-portal'
		'xdg-utils'
		'xorg-xlsclients'

		## fonts
		'fontconfig'
		'noto-fonts'
		'noto-fonts-cjk'
		'noto-fonts-emoji'
		'ttf-ubuntu-font-family'

		## theming
		'breezex-cursor-theme'
		'flat-remix-gtk'
		'kvantum-qt5'
		'papirus-icon-theme'
		'qt5ct'

		## must have desktop apps
		'alacritty'
		'dolphin'
		'feh'
		'firefox'
		'gparted'
		'gsimplecal'
		'pavucontrol-qt'
		'qjackctl'	# manage jack/pipewire
		'rofi'
		'speedcrunch'
		'vlc'
		'xorg-server-xephyr'
		'xorg-xev'
		'xorg-xeyes'

		## cli only used with sound (which is only available on the desktop)
		'cmus'
		'playerctl'
		)

	optdepends=(
		'anki'
		'anydesk'
		'ark'
		'baobab: visual ncdu'
		'barrier'
		'barrier-headless'
		'calibre: book management'
		'chromium'
		'deezloader-remix-bin'
		'digikam: photo management'
		'discord'
		'easyeffects' # pipewire effects
		'gwenview'
		'joplin-desktop'
		'keepassxc'
		'libreoffice'
		'libreoffice-de'
		'libreoffice-ru'
		'okular'
		'onlyoffice'
		'piper'
		'qbittorrent'
		'radeontop'
		'remmina'
		'rustdesk'
		'telegram-desktop'
		'tor-browser'
		'vivaldi'
		'webcord'
		'weechat: IRC TUI'
		)
}

package_ciren-meta-dev() {
	depends=(
		'adbfs-rootless-git'
		'bacon'	# rust cargo check background runner
		'bear'	# generate clang build options file for C/C++ LSP
		'cargo-audit' # rust audit for vulnerabilities
		'cargo-edit' # cargo upgrade and rm
		'cargo-expand'	# rust expand macros
		'cargo-geiger'	# rust check for deps with unsafe
		'cargo-license'	# rust check dep license
		'cargo-llvm-lines'	# rust check number of llvm lines for generic code
		'cargo-msrv' # rust minimum supported version
		'cargo-udeps'	# rust find unused deps
		'cbindgen' # gen C bindings for rust
		'ccls'	# C/C++ LSP
		'cgdb'
		'cmake'
		'code'
		'd-feet'
		'dhex'
		'gcc'
		'gdb-dashboard'
		'lua-language-server'
		'make'
		'meson'
		'meta-group-base-devel'
		'nasm'	# Assembler
		'ninja'
		'pyright'	# python lsp
		'rust-analyzer'
		'rust-bindgen'	# generate rust bindings for C
		'rustup'
		'tidy'	# HTML formatter
		'typescript-language-server'
		'wireshark-qt'
		'xxd-standalone'
		)

	optdepends=(
		# 'android-apktool'
		'android-studio'
		'flatpak-builder'
		'godot'
		'mold: improved linker'
		'scrcpy: android remote control'
		'vulkan-extra-layers'
		'vulkan-extra-tools'
		)
}

package_ciren-meta-vm() {
	depends=(
		'chntpw'	# Windows regedit
		'docker'
		'libvirt'
		'lxd'
		'qemu'
		'virt-manager'
		'virt-viewer'
		)

	optdepends=('virtio-win')
}

# package_ciren-meta-gaming() {
# 	depends=(
# 		'gamemode'
# 		'gamescope'
# 		'libstrangle'	# FPS limiter
# 		'lutris'
# 		'mangohud'
# 		)

# 	optdepends=(
# 		'ciren-meta-wine'
# 		'itch'
# 		'ferium'	# mc mod manager
# 		'legendary'	# Epic Game Store CLI
# 		'lib32-gamemode'
# 		'lib32-mangohud'
# 		'multimc-bin'
# 		'steam'
# 		'vkbasalt'
# 	)
# }

# package_ciren-meta-media-edit() {
# 	depends=(
# 		# 'gimp'
# 		# 'kdenlive'
# 		'obs-studio'
# 		'wf-recorder'

# 		'id3v2'
# 		'imagemagick'
# 	)
	
# 	optdepends=(
# 		# 'blender'
# 		# 'inkscape'
# 	)
# }


# package_ciren-meta-wine() {
# 	depends=(
# 		'wine'
# 		'winetricks'
# 		)

# 	optdepends=(
# 		'dxvk-bin'
# 		'protontricks'
# 		)
# }
#libmicrodns
